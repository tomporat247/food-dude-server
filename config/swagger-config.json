{
  "swaggerOptions": {
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "FoodDude API",
      "description": "Find the best restaurants",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "food-dude.herokuapp.com",
    "basePath": "/",
    "tags": [
      {
        "name": "Users",
        "description": "API for users in the system"
      },
      {
        "name": "Categories",
        "description": "API for categories in the system, such as italian, fast food etc..."
      },
      {
        "name": "Restaurants",
        "description": "API for restaurants in the system"
      },
      {
        "name": "Reviews",
        "description": "API for restaurant reviews in the system"
      }
    ],
    "schemes": ["http", "https"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "securityDefinitions": {
      "bearer": {
        "type": "apiKey",
        "in": "headers",
        "name": "authorization"
      }
    },
    "security": [{ "bearer": [] }],
    "paths": {
      "/auth/login": {
        "post": {
          "tags": ["Users"],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "sign in success",
              "schema": {
                "type": "string"
              }
            },
            "400": {
              "description": "invalid login parameters"
            },
            "404": {
              "description": "user not found for given credentials"
            }
          }
        }
      },
      "/auth/register": {
        "post": {
          "tags": ["Users"],
          "parameters": [
            {
              "name": "body",
              "required": true,
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "address": {
                    "$ref": "#/definitions/Address"
                  }
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "sign up success",
              "schema": {
                "type": "string"
              }
            },
            "400": {
              "description": "invalid login parameters"
            },
            "403": {
              "description": "email is taken by another user"
            }
          }
        }
      },
      "/users": {
        "get": {
          "tags": ["Users"],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "all users",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            },
            "401": {
              "description": "only admin is permitted to this action"
            }
          }
        }
      },
      "/users/search": {
        "get": {
          "tags": ["Users"],
          "parameters": [
            {
              "name": "email",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "firstName",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lastName",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "role",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "area",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "city",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "street",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseNumber",
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "contributor",
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "currentlyLoggedIn",
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "search results",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            },
            "400": {
              "description": "invalid parameters"
            }
          }
        }
      },
      "/users/{id}": {
        "put": {
          "tags": ["Users"],
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "body",
              "required": true,
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "address": {
                    "$ref": "#/definitions/Address"
                  }
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "updated user",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "404": {
              "description": "no user with given id exists"
            }
          }
        },
        "delete": {
          "tags": ["Users"],
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "deleted user",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "404": {
              "description": "no user with given id exists"
            }
          }
        }
      },
      "/categories": {
        "get": {
          "tags": ["Categories"],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "all categories",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        },
        "post": {
          "tags": ["Categories"],
          "parameters": [
            {
              "name": "body",
              "required": true,
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "newly created category",
              "schema": {
                "$ref": "#/definitions/Category"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "401": {
              "description": "only admin is permitted to this action"
            },
            "403": {
              "description": "category with given name already exists"
            }
          }
        }
      },
      "/categories/search": {
        "get": {
          "tags": ["Categories"],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "description",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "minRestaurantAmount",
              "in": "query",
              "schema": {
                "type": "number"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "search results",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Category"
                }
              }
            },
            "400": {
              "description": "invalid parameters"
            }
          }
        }
      },
      "/categories/{id}": {
        "put": {
          "tags": ["Categories"],
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "body",
              "required": true,
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "updated category",
              "schema": {
                "$ref": "#/definitions/Category"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "401": {
              "description": "only admin is permitted to this action"
            },
            "403": {
              "description": "category with given name already exists"
            }
          }
        },
        "delete": {
          "tags": ["Categories"],
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "deleted category",
              "schema": {
                "$ref": "#/definitions/Category"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "401": {
              "description": "only admin is permitted to this action"
            },
            "404": {
              "description": "category with given id does not exist"
            }
          }
        }
      },
      "/categories/statistics/category-to-restaurant-share": {
        "get": {
          "tags": ["Categories"],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "statistics",
              "schema": {
                "type": "object",
                "properties": {
                  "restaurantId": {
                    "type": "object",
                    "properties": {
                      "percentage": {
                        "type": "number"
                      },
                      "amount": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "only admin is permitted to this action"
            }
          }
        }
      },
      "/categories/statistics/category-to-average-rating": {
        "get": {
          "tags": ["Categories"],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "statistics",
              "schema": {
                "type": "object",
                "properties": {
                  "categoryId": {
                    "type": "number"
                  }
                }
              }
            },
            "401": {
              "description": "only admin is permitted to this action"
            }
          }
        }
      },
      "/restaurants": {
        "get": {
          "tags": ["Restaurants"],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "all restaurants without reviews",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Restaurant"
                }
              }
            }
          }
        },
        "post": {
          "tags": ["Restaurants"],
          "parameters": [
            {
              "name": "body",
              "required": true,
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "number"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "address": {
                    "$ref": "#/definitions/Address"
                  }
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "newly created restaurant",
              "schema": {
                "$ref": "#/definitions/Restaurant"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "401": {
              "description": "only admin is permitted to this action"
            }
          }
        }
      },
      "/restaurants/search": {
        "get": {
          "tags": ["Restaurants"],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "category",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "description",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "minRating",
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "area",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "city",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "street",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "houseNumber",
              "in": "query",
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "contributor",
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "currentlyLoggedIn",
              "in": "query",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "search results",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Restaurant"
                }
              }
            },
            "400": {
              "description": "invalid parameters"
            }
          }
        }
      },
      "/restaurants/search/{id}": {
        "get": {
          "tags": ["Restaurants"],
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "restaurant",
              "schema": {
                "$ref": "#/definitions/Restaurant"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "404": {
              "description": "not restaurant with given id exists"
            }
          }
        }
      },
      "/restaurants/{id}": {
        "delete": {
          "tags": ["Restaurants"],
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "deleted restaurant",
              "schema": {
                "$ref": "#/definitions/Restaurant"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "401": {
              "description": "only admin is permitted to this action"
            },
            "404": {
              "description": "not restaurant with given id exists"
            }
          }
        },
        "put": {
          "tags": ["Restaurants"],
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "body",
              "required": true,
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "number"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  },
                  "address": {
                    "$ref": "#/definitions/Address"
                  }
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "updated restaurant",
              "schema": {
                "$ref": "#/definitions/Restaurant"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "401": {
              "description": "only admin is permitted to this action"
            },
            "404": {
              "description": "not restaurant with given id exists"
            }
          }
        }
      },
      "/reviews": {
        "get": {
          "tags": ["Reviews"],
          "parameters": [
            {
              "name": "restaurantId",
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userId",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "reviews",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Review"
                }
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "404": {
              "description": "not restaurant or user with given id exists"
            }
          }
        }
      },
      "/reviews/{restaurantId}": {
        "post": {
          "tags": ["Reviews"],
          "parameters": [
            {
              "name": "restaurantId",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "body",
              "required": true,
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "review",
              "schema": {
                "$ref": "#/definitions/Review"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "403": {
              "description": "restaurant's reviews blocked"
            },
            "404": {
              "description": "not restaurant with given id exists"
            }
          }
        }
      },
      "/reviews/{id}": {
        "put": {
          "tags": ["Reviews"],
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "body",
              "required": true,
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "review",
              "schema": {
                "$ref": "#/definitions/Review"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "403": {
              "description": "restaurant's reviews blocked"
            },
            "404": {
              "description": "not review with given id exists"
            }
          }
        },
        "delete": {
          "tags": ["Reviews"],
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "review",
              "schema": {
                "$ref": "#/definitions/Review"
              }
            },
            "400": {
              "description": "invalid parameters"
            },
            "403": {
              "description": "restaurant's reviews blocked"
            },
            "404": {
              "description": "not review with given id exists"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "required": ["_id", "email", "firstName", "lastName", "role", "address"],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "viewer or admin"
          },
          "address": {
            "$ref": "#/definitions/Address"
          }
        },
        "example": {
          "_id": "xxx",
          "email": "JohnDoe@gmail.com",
          "firstName": "John",
          "lastName": "Doe",
          "role": "viewer",
          "address": { "area": "center", "city": "Tel Aviv", "street": "Hashalom", "houseNumber": 1 }
        }
      },
      "Category": {
        "required": ["_id", "name", "description"],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "_id": "xxx",
          "name": "italian",
          "description": "pizza, pasta and so much more"
        }
      },
      "Restaurant": {
        "required": ["_id", "name", "description", "rating", "address", "imageUrl", "category"],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "address": {
            "$ref": "#/definitions/Address"
          },
          "imageUrl": {
            "type": "string"
          },
          "category": {
            "$ref": "#/definitions/Category"
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Review"
            }
          },
          "reviewsBlocked": {
            "type": "boolean"
          }
        },
        "example": {
          "_id": "xxx",
          "name": "KFC",
          "description": "fried chicken goodies",
          "rating": 5,
          "imageUrl": "https://some-link",
          "address": { "area": "center", "city": "Tel Aviv", "street": "Hashalom", "houseNumber": 1 },
          "category": "some category",
          "reviews": ["review 1", "review 2"]
        }
      },
      "Review": {
        "required": ["_id", "user", "restaurant", "content", "createdAt"],
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/definitions/User"
          },
          "restaurant": {
            "$ref": "#/definitions/Restaurant"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        },
        "example": {
          "_id": "xxx",
          "user": "some user",
          "restaurant": "some restaurant",
          "content": "delicious meal",
          "createdAt": "2020-12-15T14:18:14.421Z",
          "updatedAt": "2020-12-18T14:18:14.421Z"
        }
      },
      "Address": {
        "required": ["area", "city", "street", "houseNumber"],
        "properties": {
          "area": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "houseNumber": {
            "type": "number"
          }
        },
        "example": {
          "area": "center",
          "city": "Tel Aviv",
          "street": "Hashalom",
          "houseNumber": 1
        }
      }
    }
  }
}
